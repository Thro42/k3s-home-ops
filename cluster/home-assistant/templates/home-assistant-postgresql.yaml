apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: null
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.1.25
  name: home-assistant-postgresql
  namespace: home-assistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: home-assistant
      app.kubernetes.io/name: postgresql
  serviceName: home-assistant-postgresql-hl
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: home-assistant
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-11.1.25
      name: home-assistant-postgresql
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: primary
                    app.kubernetes.io/instance: home-assistant
                    app.kubernetes.io/name: postgresql
                namespaces:
                  - home-assistant
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: BITNAMI_DEBUG
              value: 'true'
            - name: POSTGRESQL_PORT_NUMBER
              value: '5432'
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres-password
                  name: home-assistant-postgresql
            - name: POSTGRESQL_ENABLE_LDAP
              value: 'no'
            - name: POSTGRESQL_ENABLE_TLS
              value: 'no'
            - name: POSTGRESQL_LOG_HOSTNAME
              value: 'false'
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: 'false'
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: 'false'
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: 'off'
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          image: 'docker.io/postgres:14.2'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: postgresql
          ports:
            - containerPort: 5432
              name: tcp-postgresql
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - '-e'
                - |
                  exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /bitnami/postgresql
              name: data
      hostIPC: false
      hostNetwork: false
      initContainers:
        - command:
            - /bin/sh
            - '-ec'
            - >
              chown 1001:1001 /bitnami/postgresql

              mkdir -p /bitnami/postgresql/data

              chmod 700 /bitnami/postgresql/data

              find /bitnami/postgresql -mindepth 1 -maxdepth 1 -not -name "conf"
              -not -name ".snapshot" -not -name "lost+found" | \
                xargs -r chown -R 1001:1001
              chmod -R 777 /dev/shm
          image: 'docker.io/bitnami/bitnami-shell:10-debian-10-r406'
          imagePullPolicy: IfNotPresent
          name: init-chmod-data
          resources:
            limits: {}
            requests: {}
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /bitnami/postgresql
              name: data
            - mountPath: /dev/shm
              name: dshm
      securityContext:
        fsGroup: 1001
      serviceAccountName: default
      volumes:
        - emptyDir:
            medium: Memory
          name: dshm
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        storageClassName: longhorn-static
