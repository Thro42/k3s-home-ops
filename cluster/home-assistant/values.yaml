image:
  repository: ghcr.io/home-assistant/home-assistant
  tag: 2022.9.7
  pullPolicy: IfNotPresent
#  tag: 2022.6.6

# -- environment variables.
env:
  TZ: Europe/Berlin

# -- Configures service settings for the chart. Normally this does not need to be modified.
service:
  main:
    enabled: true
    primary: true
    type: ClusterIP
#    port: 8123
#    nodePort: 8123
    loadBalancerIP: 192.168.42.19
    externalIPs:
      - 192.168.42.19
    ports:
      http:
        protocol: HTTP
#        nodePort: 8123
#        primary: true
        port: 8123
        name: http
      hue:
        protocol: HTTP
        port: 80
      sonos:
        protocol: HTTP
        port: 80
      postgres:
        port: 5432

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  main:
    enabled: true
    hosts:
      - host: homeassistant.thomitzek.net
        paths:
          - path: /
            pathType: Prefix

hostname: "homeassistant"
# -- Enable devices to be discoverable
hostNetwork: true

#  -- When hostNetwork is true set dnsPolicy to ClusterFirstWithHostNet
dnsPolicy: ClusterFirstWithHostNet

securityContext:
  # -- (bool) Privileged securityContext may be required if USB devics are accessed directly through the host machine
  privileged: true

# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
  config:
    enabled: true
    existingClaim: homeassistant-pvc
  remote:
    enabled: true
    existingClaim: home-assistant-pvc
    mountPath: /mnt/remote
  # -- Configure a hostPathMount to mount a USB device in the container.
  usb:
    enabled: false
    type: hostPath
    hostPath: /path/to/device

addons:
  codeserver:
    enabled: true
    image:
      repository: codercom/code-server
      tag: 4.5.0
    workingDir: "/config"
    args:
      - --user-data-dir
      - "/config/.vscode"
      - --auth
      - "none"
    volumeMounts:
    - name: config
      mountPath: /config
    service:
      enabled: true
      type: LoadBalancer
      loadBalancerIP: 192.168.42.19
      ports:
        codeserver:
          port: 12321
          enabled: true
          protocol: TCP
          targetPort: codeserver
#-----------------------------------------------------------
appdaemon:
  enabled: true
  image:
    repository: acockburn/appdaemon
    tag: latest
    pullPolicy: IfNotPresent
  haToken:
  service:
    enabled: true
#    type: LoadBalancer
#    loadBalancerIP: 192.168.42.19
    port: 5050
#-----------------------------------------------------------
esphome:
  enabled: true
  image:
    repository: esphome/esphome
    tag: latest
    pullPolicy: IfNotPresent
  service:
    enabled: true
    port: 6052
#-----------------------------------------------------------
configurator:
  enabled: true
  image: 
    repository: causticlab/hass-configurator-docker
    tag: latest
    pullPolicy: IfNotPresent
  basepath: /config
  enforceBasepath: true
  service:
    enabled: true
    type: LoadBalancer
    loadBalancerIP: 192.168.42.19
    port: 3218
#-----------------------------------------------------------
# -- Enable and configure mariadb database subchart under this key.
#    For more options see [mariadb chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/mariadb)
# @default -- See values.yaml
mariadb:
  enabled: false
  architecture: standalone
  auth:
    database: home-assistant
    username: home-assistant
    password: home-assistant-pass
    rootPassword: home-assistantrootpass
  primary:
    persistence:
      enabled: true
#      existingClaim: postgresql-pvc
      storageClass: "longhorn-static"

# -- Enable and configure postgresql database subchart under this key.
#    For more options see [postgresql chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/postgresql)
# @default -- See values.yaml
postgresql:
  enabled: true
  image:
    debug: true
    repository: postgres
    tag: 14.2
  postgresqlUsername: home-assistant
  postgresqlPassword: home-assistant-pass
  postgresqlDatabase: home-assistant
  storageClass: "longhorn-static"
  global:
    storageClass: "longhorn-static"
  postgresqlDataDir: /bitnami/postgresql/data
  volumePermissions:
    enabled: true
  persistentVolumeClaimRetentionPolicy:
    enabled: true
    whenScaled: Retain
    whenDeleted: Retain
  primary:
    storageClass: "longhorn-static"
#    podSecurityContext:
#      enabled: true
#      fsGroup: 1001
#    containerSecurityContext:
#      enabled: true
#      runAsUser: 1001
#  readReplicas:
#    podSecurityContext:
#      enabled: true
#      fsGroup: 1001
#    containerSecurityContext:
#      enabled: true
#      runAsUser: 1001
#  metrics:
#    containerSecurityContext:
#      enabled: true
#      runAsUser: 1001
#      runAsNonRoot: true
  persistence:
    enabled: true
#    existingClaim: "postgresql-pvc"
    storageClass: "longhorn-static"
    accessModes:
      - ReadWriteOnce
# -- Enable and configure influxdb database subchart under this key.
#    For more options see [influxdb chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/influxdb)
# @default -- See values.yaml
influxdb:
  enabled: false
  architecture: standalone
  database: home_assistant
  authEnabled: false
  persistence:
    enabled: true
    storageClass: "nfs-client"
    size: 8Gi

metrics:
  # -- Enable and configure a Prometheus serviceMonitor for the chart under this key.
  # @default -- See values.yaml
  enabled: false
  serviceMonitor:
    interval: 1m
    scrapeTimeout: 30s
    labels: {}
    ## See https://www.home-assistant.io/docs/authentication/ for where to find
    ## long lived access token creation under your account profile, which is
    ## needed to monitor Home Assistant
    # bearerTokenSecret:
    #   name: ""
    #   key: ""

  # -- Enable and configure Prometheus Rules for the chart under this key.
  # @default -- See values.yaml
  prometheusRule:
    enabled: false
    labels: {}
    # -- Configure additionial rules for the chart under this key.
    # @default -- See prometheusrules.yaml
    rules: []
      # - alert: HomeAssistantAbsent
      #   annotations:
      #     description: Home Assistant has disappeared from Prometheus service discovery.
      #     summary: Home Assistant is down.
      #   expr: |
      #     absent(up{job=~".*home-assistant.*"} == 1)
      #   for: 5m
      #   labels:
      #     severity: critical