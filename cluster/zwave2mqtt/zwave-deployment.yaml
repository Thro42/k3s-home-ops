apiVersion: apps/v1
kind: Deployment
metadata:
  name: zwave2mqtt
  labels:
    app: zwave2mqtt
    name: zwave2mqtt
    app.kubernetes.io/name: zwave2mqtt
    io.kompose.service: zwave2mqtt
spec:
  replicas: 1
  selector:
    matchLabels:
      name: zwave2mqtt
  template:
    metadata:
      labels:
        name: zwave2mqtt
    spec:
      containers:
      - name: zwave2mqtt
        image: robertslando/zwave2mqtt:latest
        livenessProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: Accept
              value: text/plain
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8091
          name: http
          protocol: TCP
        - containerPort: 3030
          name: websocket
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: "1"
            memory: 400Mi
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
        volumeMounts:
        - mountPath: /dev/serial/by-id/usb-0658_0200-if00
          name: zwavestick
        - mountPath: /usr/src/app/store
          name: zwave-pvc
        # - mountPath: /usr/src/app/store/settings.json <-- if putting your settings.json in a secret
        #   name: config
        #   readOnly: true
        #   subPath: settings.json
#      nodeSelector:
#      - matchExpressions:
#        - {key: "feature.node.kubernetes.io/custom-zwave", operator: In, values: ["true"]}
#        kubernetes.io/hostname: stick1 #<--- the name of your cluster node that the zwave usb stick in
      volumes:
      # - name: config <-- if putting your settings.json in a secret
      #   secret:
      #     defaultMode: 420
      #     secretName: zwave2mqtt
      - name: zwavestick
        hostPath:
          path: /dev/serial/by-id/usb-0658_0200-if00
          type: CharDevice
      - name: zwave-pvc
        persistentVolumeClaim:
          claimName: zwave-pvc
# -- Affinity constraint rules to place the Pod on a specific node.
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - {key: "feature.node.kubernetes.io/custom-zwave", operator: In, values: ["true"]}
